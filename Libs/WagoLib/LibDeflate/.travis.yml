language: c
sudo: false

os:
    - linux
    - osx

env:
  global:
    - LUAROCKS=2.2.2
  matrix:
    - LUA=lua5.1.4  LUANUMBER=double
    - LUA=lua5.4.0  LUANUMBER=double
    - LUA=luajit     # latest stable version (2.0.x)
    - LUA=lua5.2.4  LUANUMBER=double
    - LUA=lua5.3.3  LUANUMBER=double
    - LUA=luajit2.1  # current head of 2.1 branch

matrix:
  # 'bleeding edge' LuaJIT may fail without breaking the build
  allow_failures:
    - env: LUA=luajit2.0
    - env: LUA=luajit2.1

before_install:
  - source .travis/setenv_lua.sh
  - source .travis/setup_compressor_decompressor.sh
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then sudo apt-get install -y libxml2-utils; fi

script:
  - lua -v
  - if [[ "$LUA" != "lua5.4.0" ]]; then luacheck -g -u .; fi
  - if [[ "$LUA" != "lua5.4.0" ]]; then bash tests/dev_scripts/release.sh; fi
  - if [[ "$LUA" != "lua5.4.0" ]]; then cd docs && ldoc . && cd ..; fi
  - lua examples/example.lua
  - lua tests/Test.lua --verbose --shuffle
  # converage test makes it too slow. so only run once in luajit linux
  # Don't shuffle coverage test so we see progress
  - if [[ "$LUA" == "luajit" && "$TRAVIS_OS_NAME" == "linux" ]]; then lua tests/Test.lua CommandLineCodeCoverage --verbose; fi
  - if [[ "$LUA" == "luajit" && "$TRAVIS_OS_NAME" == "linux" ]]; then lua -lluacov tests/Test.lua CodeCoverage --verbose; fi

after_success:
  - if [[ "$LUA" == "luajit" && "$TRAVIS_OS_NAME" == "linux" ]]; then luacov; fi
  - if [[ "$LUA" == "luajit" && "$TRAVIS_OS_NAME" == "linux" ]]; then bash <(curl --retry 10 --retry-delay 10 -s https://codecov.io/bash); fi

notifications:
  email:
    on_success: change
    on_failure: always